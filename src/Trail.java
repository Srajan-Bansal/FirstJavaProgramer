import ElementsOfProgramming.Trees.TreeLeetcode;import Knowledge.Trie;import Kunal_Kushwaha.LinkedList.Questions.LinkedListLeetcode;import java.util.*;public class Trail implements LinkedListLeetcode, TreeLeetcode, Trie {    public static void main(String[] args) {        Trail s = new Trail();            }    public boolean isEvenOddTree(TreeNode root) {        Queue<TreeNode> queue = new LinkedList<>();        queue.offer(root);        int prev = 0, level = 0;        while (!queue.isEmpty()) {            int size = queue.size();            if ((level & 1) == 0) prev = Integer.MIN_VALUE;            else prev = Integer.MAX_VALUE;            while (size-- > 0) {                TreeNode node = queue.poll();                if ((level & 1) == 0) {                    if (prev > node.val) return false;                } else {                    if (prev < node.val) return false;                }                prev = node.val;                if (node.left != null) queue.offer(node.left);                if (node.right != null) queue.offer(node.right);            }            level++;        }        return true;    }}